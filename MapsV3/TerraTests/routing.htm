<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
    
    
    <link href="MapResources/css/XOMap-1.0.0.css" rel="stylesheet" type="text/css" />
    <link href="MapResources/css/MapPage.css" rel="stylesheet" type="text/css" />
    
    <script type="text/javascript">
        function TrafficEventClicked(clicked) {
            alert(clicked);
        }
    </script>
    
    <script src="MapResources/js/framework/browserdetect_lite.js" type="text/javascript"></script>
    <script src="MapResources/js/framework/jquery-1.4.2.min.js" type="text/javascript"></script>
    <script src="MapResources/js/framework/jquery.json-1.3.min.js" type="text/javascript"></script>

    <script src="MapResources/js/framework/jquery.event.drag-1.5.min.js" type="text/javascript"></script>
    <script src="MapResources/js/framework/CacheParams.js" type="text/javascript"></script>
    <script src="MapResources/js/framework/opacity.js" type="text/javascript"></script>
    <script src="MapResources/js/XOMap-1.1.0-Params.js" type="text/javascript"></script>
    
    <script src="MapResources/js/XOMap-1.1.0.js" type="text/javascript"></script>
    
    
    <script type="text/JavaScript">

        var lng = "1";
    
    </script>

</head>
<body>
    <form id="form1" runat="server">

    <div id="MainMap"></div>
    <div id="debug"></div>
    <div id="Results"></div>
    <!-- div id="myZoom"> </div -->
    

    <input id="Button2" type="button" value="Test Route" onclick="TestRoute();" />

    
    </form>
    
    <script type="text/javascript">
        //document.domain = "terra.gr";


        if (lng == "1") {
            handlers_url = 'http://map.xo.gr/ypnewera/';
        } else {
            handlers_url = 'http://map.xo.gr/ypneweraen/';
        }

        

        function S4() {
            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        }
        function guid() {
            return (S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4());
        }


        function TestRoute(eng) {
            var origin_x = 482392;
            var origin_y = 4209865;
            var destination_x = 472740;
            var destination_y = 4200044;


            // se antithesi me to MMM edw mporoun na mpoune kai endiamesa stops ews 5 opos grafete stin sumbasi.
            //  
            var routeStops = [];
            routeStops.push({ "x": origin_x, "y": origin_y, "stopName": "afetiria otinane", "stopId": guid() });
            routeStops.push({ "x": destination_x, "y": destination_y, "stopName": "proorismos otinane", "stopId": guid() });


            var pedestrian = false; 		 // otan afto einai true ginetai dromologisi gia pezw kai agnoountai oloi oi parametroi pou akolouthoun.
            var findBestSequence = false;    // otan einai false to routing krataei tin akouloutheia ton simeion etsi opos dothikan sto routeStops
            var preserveFirstStop = false;   // exei noima na ginei true otan to findBestSequence = true
            var preserverLastStop = false;   // exei noima na ginei true otan to findBestSequence = true
            var allowDaktilio = true; 	 // false otan den theloume na perasei apo daktylio. ( PROSOXH otan einai 2 simeia gia routing kai to ena briskete entos daktiliou tote den briskei diadromi.  
            // An omos 1 waypoint brisketai mesa sto daktilio tote epistrefete diadromi pou pernaei se ola ta waypoints pou briskontai ektos dakliliou kai 
            // to routeObject.routeComments periexei mia perigrafei me to shmeio(a) pou apoklistikan apo tin diadromi. An thelete to emfanizetai ston xristi.
            // 
            var allowATTIKHOdos = true;      // false gia apofigi Attikh odos.
            var allowCHARGERoads = true; 	 // false gia apofigi Odwn me diodia.
            var allowFerry = true; 	         // false gia apofigi Ferry boat.
            var allowUnpaved = true; 	     // false gia apofigi Xomatodromwn
            var fastest = true;  			 // otan einai true  epistrefei tin grigoroteri diadromi os pros ton xrono. kai otan einai false os pros tin apostasi.  	
            var extraParams = ''; 			 // gia melontiki xrisi.

            $.ajax({
                type: "POST",
                url: "http://mapsrv.xo.gr/avl/xoservice.asmx/getRoute_CAR_json",
                dataType: "xml",
                data:
                                {
                                    "lang": 1,
                                    "authorization": '',
                                    "routeStopsJSON": $.toJSON(routeStops),
                                    "pedestrian": pedestrian,
                                    "findBestSequence": findBestSequence,
                                    "preserveFirstStop": preserveFirstStop,
                                    "preserverLastStop": preserverLastStop,
                                    "allowDaktilio": allowDaktilio,
                                    "allowATTIKHOdos": allowATTIKHOdos,
                                    "allowCHARGERoads": allowCHARGERoads,
                                    "allowFerry": allowFerry,
                                    "allowUnpaved": allowUnpaved,
                                    "fastest": fastest,
                                    "extraParams": extraParams
                                },

                success: function (xml) {

                    var data = $.evalJSON($(xml).find("string").text());

                    if (data.resType == 1) {

                        var routeObject = data;


                        // NEW FUNCTION!
                        // - Ζωγραφίζει τη διαδρομή πάνω στο χάρτη
                        myMap.ShowRouteObject(routeObject, 1);

                        // NEW FUNCTION!
                        // - Καθαρίζει ολα τα προηγούμενα pouins απο προηγούμενα calls
                        myMap.ClearNaviPoints();

                        var directions = routeObject.resObject.routeSteps;
                        var totaltime = 0;
                        var totalLen = 0;
                        var formatted = "";
                        for (var i = 0; i < directions.length; i++) {
                            var res = directions[i];
                            thisStepDistance = res.stepDistance;

                            totaltime += parseFloat(res.stepTime);
                            totalLen += parseFloat(thisStepDistance);


                            // - βάζει ένα σημείο (λουπας) πάνω στο χάρτη
                            myMap.PutNaviPoint(res.stepPointCoord.x, res.stepPointCoord.y, i);

                            if (i == 0) {
                                myMap.InsertPinXO(res.stepPointCoord.x, res.stepPointCoord.y, "Start Marker", "mystartpin", 1, ""); // Start Marker
                            }
                            if (i == directions.length-1) {
                                myMap.InsertPinXO(res.stepPointCoord.x, res.stepPointCoord.y, "End Marker", "myendpin", 1, ""); // End Marker
                            }

                            // Φτιάχνει τα commands για τα click, hover και mouseout
                            command = 'ShowRouteMap(' + res.stepPointCoord.x + ',' + res.stepPointCoord.y + ',' + i + ');';
                            var HoverCommand = 'HoverNaviPoint(' + i + ');';
                            var mouseoutCommand = 'UnHoverNaviPoint(' + i + ');';
                            
                            var len = "";
                            var j = i + '. ';

                            if (thisStepDistance != 0)
                                if (Glob_InEnglish) {
                                    if (res.stepDescriptionEN.indexOf("Continue") == 0)
                                        len = ' for ' + FormatLen(thisStepDistance);
                                    else
                                        len = ' and continue for ' + FormatLen(thisStepDistance);
                                }
                                else {
                                    if (res.stepDescriptionGR.indexOf("Συνεχίστε") == 0)
                                        len = ' για ' + FormatLen(thisStepDistance);
                                    else
                                        len = ' και συνεχίστε για ' + FormatLen(thisStepDistance);
                                }


                            var stepDescription;
                            if (Glob_InEnglish)
                                stepDescription = res.stepDescriptionEN;
                            else
                                stepDescription = res.stepDescriptionGR;

                            // Δημιουργία της λίστας που φαίνεται αριστερά
                            var f = '<tr>';
                            f += '<td class="work">' + j + '</td>';
                            f += '<td id="route_ResN' + i + '" class="table2 naviresult" onmouseout="' + mouseoutCommand + '" onmouseover="' + HoverCommand + '" onclick=\'' + command + '\'>' + stepDescription + '</td>';
                            f += '<td class="met">' + FormatLen(thisStepDistance) + '</td>';
                            f += '</tr>';
                            
                            
                            myMap.DirIds[myMap.DirIds.length] = j + stepDescription + len;

                            formatted += f;
                        }
                        formatted += "Συνολικός εκτιμώμενος χρόνος <b>" + FormatTime(totaltime) + "</b><br/>";
                        formatted += "Συνολική απόσταση <b>" + FormatLen(totalLen) + 'm</b><br/>';
                        $('#Results').html(formatted);

                        


                    } else {

                        alert("server error :" + data.resDescription);

                    }


                }
            });


        }


        
        
        function MyInit() {

            //myMap = new GV_Map('MainMap', XO_MapParams); // Το initialization άλλαξε! XO_MapParams μέσα στο XOMap-1.0.0-Params.js
            myMap = new GV_Map('MainMap', XO_MapParams, function (m) {
                // init stuff
            });
        }

        function GetCurExtent() {
            var xy1 = myMap.GetStartCoords();
            var xy2 = myMap.GetEndCoords();
            $("#debug").html(xy1[0] + "," + xy1[1] + "," + xy2[0] + "," + xy2[1]);
        }



        $(document).ready(
                  function() {
                      MyInit();

                      
                  }
                  );
    </script>
</body>
</html>
